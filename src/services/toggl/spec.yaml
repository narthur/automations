openapi: 3.0.0
info:
  title: Toggl API
  version: 1.0.0
servers:
  - url: https://api.track.toggl.com/api/v9/
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
security:
  - basicAuth: []
paths:
  /me:
    get:
      summary: Returns details for the current user.
      parameters:
        - name: with_related_data
          in: query
          description: Retrieve user related data (clients, projects, tasks, tags, workspaces, time entries, etc.)
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "schemas/User.yaml"
        "403":
          description: User does not have access to this resource.
        "404":
          description: could not load user data
        "500":
          description: Internal Server Error
    put:
      summary: Updates details for the current user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                beginning_of_week:
                  type: integer
                  description: "User's first day of the week. Sunday: 0, Monday:1, etc."
                country_id:
                  type: integer
                  description: User's country ID
                current_password:
                  type: string
                  description: User's current password (used to change the current password)
                default_workspace_id:
                  type: integer
                  description: User's default workspace ID
                email:
                  type: string
                  description: User's email address
                fullname:
                  type: string
                  description: User's full name
                password:
                  type: string
                  description: User's new password (current one must also be provided)
                timezone:
                  type: string
                  description: User's timezone
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  api_token:
                    type: string
                    description: will be omitted if empty
                  at:
                    type: string
                  beginning_of_week:
                    type: integer
                  country_id:
                    type: integer
                  created_at:
                    type: string
                  default_workspace_id:
                    type: integer
                  email:
                    type: string
                  fullname:
                    type: string
                  has_password:
                    type: boolean
                  id:
                    type: integer
                  image_url:
                    type: string
                  openid_email:
                    type: string
                  openid_enabled:
                    type: boolean
                  options:
                    type: object
                    properties:
                      additionalProperties:
                        type: object
                        properties: {}
                    description: will be omitted if empty
                  timezone:
                    type: string
                  updated_at:
                    type: string
        "400":
          description: |
            Possible error messages:
            * Current password is not valid
            * Current password must be present to change password
            * Invalid beginning_of_week
            * Invalid country_id
            * Invalid default_workspace_id
            * Invalid email
            * Invalid fullname
            * Invalid timezone
            * Password should be at least 6 characters
            * user with this email already exists
        "403":
          description: User does not have access to this resource.
  /me/clients:
    get:
      summary: Returns a list of clients for the current user.
      parameters:
        - name: since
          in: query
          description: Retrieve clients created/modified/deleted since this date using UNIX timestamp.
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "schemas/Client.yaml"
        "500":
          description: Internal Server Error
  /me/features:
    get:
      summary: Returns a list of features for the current user.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    features:
                      type: array
                      items:
                        type: object
                        properties:
                          enabled:
                            type: boolean
                          feature_id:
                            type: integer
                          name:
                            type: string
                    workspace_id:
                      type: integer
        "403":
          description: Operation Forbidden
        "500":
          description: Internal Server Error
  /me/location:
    get:
      summary: Returns the client's IP-based location. If no data is present, empty response will be yielded.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  city:
                    type: string
                  city_lat_long:
                    type: string
                  country_code:
                    type: string
                  country_name:
                    type: string
                  state:
                    type: string
        "404":
          description: Country with given ISO code not found
        "500":
          description: Internal Server Error
  /me/logged:
    get:
      summary: Used to check if authentication works.
      responses:
        "200":
          description: Successful response
        "500":
          description: Internal Server Error
  /me/organizations:
    get:
      summary: Returns a list of organizations for the current user.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "schemas/Organization.yaml"
        "500":
          description: Internal Server Error
  /me/projects:
    get:
      summary: Returns a list of projects for the current user.
      parameters:
        - name: include_archived
          in: query
          description: Whether to include archived projects
          schema:
            type: string
        - name: since
          in: query
          description: Retrieve projects modified since this date using UNIX timestamp, including deleted ones.
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "schemas/Project.yaml"
        "400":
          description: Invalid include_archived value
        "403":
          description: Operation Forbidden
        "500":
          description: Internal Server Error
  /me/projects/paginated:
    get:
      summary: Returns a paginated list of projects for the current user.
      parameters:
        - name: start_project_id
          in: query
          description: ID of the project to start from
          schema:
            type: integer
        - name: since
          in: query
          description: Retrieve projects modified since this date using UNIX timestamp, including deleted ones.
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of projects to return per page, default 201.
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "schemas/Project.yaml"
        "403":
          description: Operation Forbidden
        "500":
          description: Internal Server Error
  /me/tags:
    get:
      summary: Returns a list of tags for the current user.
      parameters:
        - name: since
          in: query
          description: Retrieve tags modified/deleted since this date using UNIX timestamp.
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "schemas/Tag.yaml"
        "403":
          description: User does not have access to this resource.
        "500":
          description: Internal Server Error
  /me/tasks:
    get:
      summary: Returns tasks from projects in which the user is participating.
      parameters:
        - name: since
          in: query
          description: Retrieve tasks created/modified/deleted since this date using UNIX timestamp.
          schema:
            type: integer
        - name: include_not_active
          in: query
          description: Include tasks marked as done.
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "schemas/Task.yaml"
        "400":
          description: Invalid include_not_active value
        "403":
          description: User does not have access to this resource.
        "500":
          description: Internal Server Error
  /me/track_reminders:
    get:
      summary: Returns a list of track reminders for the current user.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "schemas/TrackReminder.yaml"
        "403":
          description: User does not have access to this resource.
        "500":
          description: Internal Server Error
  /me/web-timer:
    get:
      summary: Get web timer.
      responses:
        "200":
          description: Successful operation
        "403":
          description: Operation Forbidden
        "404":
          description: Resource can not be found
        "500":
          description: Internal Server Error
  /me/workspaces:
    get:
      summary: Returns a list of workspaces for the current user.
      parameters:
        - name: since
          in: query
          description: Retrieve workspaces created/modified/deleted since this date using UNIX timestamp, including the dates a workspace member got added, removed or updated in the workspace.
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "schemas/Workspace.yaml"
        "403":
          description: User does not have access to this resource.
        "500":
          description: Internal Server Error
  /me/preferences:
    get:
      summary: Returns user preferences and alpha features. The list of alpha features contains a full list of feature codes (every feature that exists in database) and the enabled flag specifying if that feature should be enabled or disabled for the user.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "schemas/Preferences.yaml"
        "403":
          description: User does not have access to this resource.
        "500":
          description: Internal Server Error
    post:
      summary: With this endpoint, preferences can be modified and alpha features can be enabled or disabled.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Preferences.yaml"
      responses:
        "200":
          description: Successful operation
        "400":
          description: |
            Possible error messages:
            * Cannot set value for ToSAcceptNeeded
            * Invalid feature code(s)
            * Missing data
            * Value in date_format is invalid
            * Value in timeofday_format is invalid
        "403":
          description: User does not have access to this resource.
        "500":
          description: Internal Server Error
  /me/preferences/{client}:
    get:
      summary: Returns user preferences and alpha features. The list of alpha features contains a full list of feature codes (every feature that exists in database) and the enabled flag specifying if that feature should be enabled or disabled for the user.
      parameters:
        - name: client
          in: path
          required: true
          description: Client type
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "schemas/Preferences.yaml"
        "400":
          description: Invalid client value
        "403":
          description: User does not have access to this resource.
        "500":
          description: Internal Server Error
    post:
      summary: With this endpoint, preferences can be modified and alpha features can be enabled or disabled.
      parameters:
        - name: client
          in: path
          required: true
          description: Client type
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "schemas/Preferences.yaml"
      responses:
        "200":
          description: Successful operation
        "400":
          description: |
            Possible error messages:
            * Cannot set value for ToSAcceptNeeded
            * Invalid feature code(s)
            * Missing data
            * Unknown client
            * Value in date_format is invalid
            * Value in timeofday_format is invalid
        "403":
          description: User does not have access to this resource.
        "500":
          description: Internal Server Error
  /workspaces/{workspace_id}/preferences:
    get:
      summary: Get the preferences for a given workspace.
      parameters:
        - name: workspace_id
          in: path
          required: true
          description: Workspace ID
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  logo:
                    type: string
        "400":
          description: Workspace not found
        "403":
          description: User does not have access to this resource.
        "500":
          description: Internal Server Error
    post:
      summary: Update the preferences for a given workspace.
      parameters:
        - name: workspace_id
          in: path
          required: true
          description: Workspace ID
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                annual-master-campaign-2018:
                  type: string
                  description: Legacy field
                inc_tos_accepted_at:
                  type: string
                  description: Time of acceptance of the terms of service
                inc_tos_accepted_by:
                  type: integer
                  description: User ID who accepted the terms of service
                initial_pricing_plan:
                  type: integer
                  description: Pricing plan ID
                january-2018-campaign:
                  type: boolean
                  description: Legacy field
                master_signup:
                  type: boolean
                  description: Legacy field
                report_locked_at:
                  type: string
                  description: Date on which "Lock Time Entries" feature was enabled
                single_sign_on:
                  type: boolean
                  description: Whether SSO is enabled for this workspace
                sso_requested_at:
                  type: string
                  description: Date on which SSO was requested
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  logo:
                    type: string
        "400":
          description: |
            Possible error messages:
            * Workspace not found
            * The field is not writable
            * Admin permissions required
        "403":
          description: User does not have access to this resource.
        "500":
          description: Internal Server Error
  /me/reset_token:
    post:
      summary: Resets the API token for the current user.
      responses:
        "200":
          description: Successful response
        "403":
          description: User does not have access to this resource.
        "500":
          description: Internal Server Error
